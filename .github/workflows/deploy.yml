name: GitHub Pages

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: self-hosted
    container:
      image: bitnami/git
      env:
        TZ: Asia/Shanghai
    steps:
    - name: Setup Hugo
      run: |
        LATEST_VERSION=$(curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/v//')
        curl -L -o hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v${LATEST_VERSION}/hugo_${LATEST_VERSION}_linux-arm64.tar.gz
        tar -xzf hugo.tar.gz
        mv hugo /usr/local/bin/

    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Build
      run: hugo --minify

    - name: Deploy to GitHub Pages
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 配置 Git 用户信息
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # 初始化 gh-pages 分支
        rm -rf .git/
        mkdir gh-pages && cd gh-pages
        git init
        git remote add origin https://x-access-token:${REPO_TOKEN}@github.com/${{ github.repository }}.git
        git fetch origin gh-pages || echo "gh-pages branch does not exist"
        git switch gh-pages || git switch -c gh-pages

        # 清理旧内容并复制新内容
        rm -rf ./*
        cp -r ../public/* ./

        # 提交并推送
        if [ -n "$(git status --porcelain)" ]; then
          git add --all
          git commit -m "Deploy site on $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin gh-pages --force
        else
          echo "Nothing to commit, working tree clean."
        fi